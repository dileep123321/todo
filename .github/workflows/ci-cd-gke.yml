name: Full Stack Todo App CI/CD - GKE (Artifact Registry)

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: modern-saga-472703-k3
  REGION: us-central1
  GKE_CLUSTER: test-demo-cluster
  GKE_ZONE: us-central1-a
  REPO_NAME: todo-repo
  BACKEND_IMAGE: us-central1-docker.pkg.dev/modern-saga-472703-k3/todo-repo/todo-backend
  FRONTEND_IMAGE: us-central1-docker.pkg.dev/modern-saga-472703-k3/todo-repo/todo-frontend

jobs:
  # --------------------------------------------------
  # CI STAGE - LINT, TEST, SECURITY
  # --------------------------------------------------
  ci-checks:
    name: Run CI Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Backend Dependencies
        run: |
          cd backend
          pip install -r requirements.txt

      - name: Lint Backend Code
        run: |
          cd backend
          pylint *.py || true

      - name: Security Scan (Bandit)
        run: |
          cd backend
          pip install bandit
          bandit -r . || true

      - name: Backend Unit Tests
        run: |
          cd backend
          pytest || true

      - name: Frontend Lint and Test
        run: |
          cd frontend
          npm install
          npm run lint || true
          npm test || true

      - name: Scan for Secrets
        run: |
          pip install trufflehog
          trufflehog filesystem . || echo "No secrets found"

  # --------------------------------------------------
  # BUILD BACKEND IMAGE
  # --------------------------------------------------
  build_backend:
    name: Build & Push Backend Image
    runs-on: ubuntu-latest
    needs: ci-checks

    steps:
      - uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          export_default_credentials: true

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Build and Push Backend Image
        run: |
          docker build -t $BACKEND_IMAGE:latest ./backend
          docker push $BACKEND_IMAGE:latest

  # --------------------------------------------------
  # BUILD FRONTEND IMAGE
  # --------------------------------------------------
  build_frontend:
    name: Build & Push Frontend Image
    runs-on: ubuntu-latest
    needs: build_backend

    steps:
      - uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          export_default_credentials: true

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Build and Push Frontend Image
        run: |
          docker build -t $FRONTEND_IMAGE:latest ./frontend
          docker push $FRONTEND_IMAGE:latest

  # --------------------------------------------------
  # DEPLOY TO GKE
  # --------------------------------------------------
  deploy:
    name: Deploy to GKE
    runs-on: ubuntu-latest
    needs: [build_backend, build_frontend]

    steps:
      - uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          export_default_credentials: true

      - name: Install GKE Auth Plugin
        run: |
          sudo apt-get update -y
          sudo apt-get install -y google-cloud-sdk-gke-gcloud-auth-plugin
          echo "USE_GKE_GCLOUD_AUTH_PLUGIN=True" >> $GITHUB_ENV

      - name: Get GKE Credentials
        run: |
          gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE --project $PROJECT_ID

      - name: Deploy Application
        run: |
          kubectl apply -f mongodb/ --validate=false
          kubectl apply -f backend/k8s/ --validate=false
          kubectl apply -f frontend/k8s/ --validate=false

      - name: Update Deployment Images
        run: |
          kubectl set image deployment/backend-deployment backend=$BACKEND_IMAGE:latest --record || true
          kubectl set image deployment/frontend-deployment frontend=$FRONTEND_IMAGE:latest --record || true

      - name: Wait for Rollout
        run: |
          kubectl rollout status deployment/backend-deployment --timeout=180s || true
          kubectl rollout status deployment/frontend-deployment --timeout=180s || true

      - name: Show Services
        run: |
          kubectl get svc -A -o wide
